/*
 Minnow Pacemaker client firmware.
    
 Copyright (C) 2013 Robert Fairlie-Cuninghame

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//
// Crc 8 functions
//

#include "crc8.h"

#include <avr/pgmspace.h>

PROGMEM static const uint8_t crc_array[256] =
{
  0x00U, 0xa6U, 0xeaU, 0x4cU, 0x72U, 0xd4U, 0x98U, 0x3eU,
  0xe4U, 0x42U, 0x0eU, 0xa8U, 0x96U, 0x30U, 0x7cU, 0xdaU,
  0x6eU, 0xc8U, 0x84U, 0x22U, 0x1cU, 0xbaU, 0xf6U, 0x50U,
  0x8aU, 0x2cU, 0x60U, 0xc6U, 0xf8U, 0x5eU, 0x12U, 0xb4U,
  0xdcU, 0x7aU, 0x36U, 0x90U, 0xaeU, 0x08U, 0x44U, 0xe2U,
  0x38U, 0x9eU, 0xd2U, 0x74U, 0x4aU, 0xecU, 0xa0U, 0x06U,
  0xb2U, 0x14U, 0x58U, 0xfeU, 0xc0U, 0x66U, 0x2aU, 0x8cU,
  0x56U, 0xf0U, 0xbcU, 0x1aU, 0x24U, 0x82U, 0xceU, 0x68U,
  0x1eU, 0xb8U, 0xf4U, 0x52U, 0x6cU, 0xcaU, 0x86U, 0x20U,
  0xfaU, 0x5cU, 0x10U, 0xb6U, 0x88U, 0x2eU, 0x62U, 0xc4U,
  0x70U, 0xd6U, 0x9aU, 0x3cU, 0x02U, 0xa4U, 0xe8U, 0x4eU,
  0x94U, 0x32U, 0x7eU, 0xd8U, 0xe6U, 0x40U, 0x0cU, 0xaaU,
  0xc2U, 0x64U, 0x28U, 0x8eU, 0xb0U, 0x16U, 0x5aU, 0xfcU,
  0x26U, 0x80U, 0xccU, 0x6aU, 0x54U, 0xf2U, 0xbeU, 0x18U,
  0xacU, 0x0aU, 0x46U, 0xe0U, 0xdeU, 0x78U, 0x34U, 0x92U,
  0x48U, 0xeeU, 0xa2U, 0x04U, 0x3aU, 0x9cU, 0xd0U, 0x76U,
  0x3cU, 0x9aU, 0xd6U, 0x70U, 0x4eU, 0xe8U, 0xa4U, 0x02U,
  0xd8U, 0x7eU, 0x32U, 0x94U, 0xaaU, 0x0cU, 0x40U, 0xe6U,
  0x52U, 0xf4U, 0xb8U, 0x1eU, 0x20U, 0x86U, 0xcaU, 0x6cU,
  0xb6U, 0x10U, 0x5cU, 0xfaU, 0xc4U, 0x62U, 0x2eU, 0x88U,
  0xe0U, 0x46U, 0x0aU, 0xacU, 0x92U, 0x34U, 0x78U, 0xdeU,
  0x04U, 0xa2U, 0xeeU, 0x48U, 0x76U, 0xd0U, 0x9cU, 0x3aU,
  0x8eU, 0x28U, 0x64U, 0xc2U, 0xfcU, 0x5aU, 0x16U, 0xb0U,
  0x6aU, 0xccU, 0x80U, 0x26U, 0x18U, 0xbeU, 0xf2U, 0x54U,
  0x22U, 0x84U, 0xc8U, 0x6eU, 0x50U, 0xf6U, 0xbaU, 0x1cU,
  0xc6U, 0x60U, 0x2cU, 0x8aU, 0xb4U, 0x12U, 0x5eU, 0xf8U,
  0x4cU, 0xeaU, 0xa6U, 0x00U, 0x3eU, 0x98U, 0xd4U, 0x72U,
  0xa8U, 0x0eU, 0x42U, 0xe4U, 0xdaU, 0x7cU, 0x30U, 0x96U,
  0xfeU, 0x58U, 0x14U, 0xb2U, 0x8cU, 0x2aU, 0x66U, 0xc0U,
  0x1aU, 0xbcU, 0xf0U, 0x56U, 0x68U, 0xceU, 0x82U, 0x24U,
  0x90U, 0x36U, 0x7aU, 0xdcU, 0xe2U, 0x44U, 0x08U, 0xaeU,
  0x74U, 0xd2U, 0x9eU, 0x38U, 0x06U, 0xa0U, 0xecU, 0x4aU
};

uint8_t crc8(uint8_t *data, uint16_t length)
{
  uint8_t crc = 0;
  while (length-- > 0)
  {
    crc = pgm_read_byte_near(crc_array + (*data ^ crc));
    data += 1;
  }
  return crc;
}

uint8_t crc8_continue(uint8_t *data, uint16_t length, uint8_t crc)
{
  while (length-- > 0)
  {
    crc = pgm_read_byte_near(crc_array + (*data ^ crc));
    data += 1;
  }
  return crc;
}
